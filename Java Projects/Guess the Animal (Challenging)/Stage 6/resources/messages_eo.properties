# The program uses the java.text.MessageFormat class to format messages.
# For correct message formatting, see the documentation for this class.
# https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/text/MessageFormat.html
#
# Please note, that the apostrophe (') is special symbol and you should double it or use alternative symbol (’)
#
# The program supports variability of messages. Use symbol '\f' (form feed) to separate them.
#

welcome=Bonvenon al la sperta sistemo de la besto!

# Greetings

# General greetings. Can be used at any time.

greeting=Saluton!

# Time specific greetings.

greeting.morning        = Bonan matenon!
greeting.afternoon      = Bonan tagon!
greeting.evening        = Bonan vesperon!
greeting.night          = Saluton Nokta Strigo!
greeting.early          = Saluton Frua Birdo!

time.morning.start      = 05:00
time.morning.end        = 12:00
time.afternoon.start    = 12:00
time.afternoon.end      = 18:00
time.evening.start      = 18:00
time.night.end          = 03:00
time.early.start        = 03:00
time.early.end          = 05:00

farewell=\
    Ĝis!\f\
    Ĝis revido!\f\
    Estis agrable vidi vin!

# Ask user again for a closed (Yes/No) question

ask.again=\
    Bonvolu enigi jes aŭ ne.\f\
    Amuze, mi ankoraŭ ne komprenas, ĉu jes aŭ ne?\f\
    Pardonu, devas esti jes aŭ ne.\f\
    Ni provu denove: ĉu jes aŭ ne?\f\
    Pardonu, ĉu mi rajtas demandi vin denove: ĉu tio estis jes aŭ ne?

# Ask for a favourite animal

animal.wantLearn        = Mi volas lerni pri bestoj.
animal.askFavorite      = Kiun beston vi plej ŝatas?
animal.nice             = Bela!\fMirinde!\fMojosa!\fBonege!\fMirinda!
animal.learnedMuch      = \ Mi lernis tiom multe pri bestoj!

# The properties used for method ask("<key>")

animal.prompt       = Enigu la nomon de besto:
animal.error        =\
    La besto devas esti enmetita en la jenan formaton: \n\
    nomo de la besto, ekzemple, "elefanto".

statement.prompt    =\
    Indiku fakton, kiu distingas {0} de {1}.\n\
    La frazo devas esti de la formato: 'Ĝi ...'.

statement.error     =\
      La ekzemploj de aserto:\n\
       - Ĝi povas flugi\n\
       - Ĝi havas kornojn\n\
       - Ĝi estas mamulo

# The Guessing Game

game.letsPlay           = Ni ludu!
game.think              = Vi pensu pri besto, kaj mi divenos ĝin.
game.enter              = Premu enen kiam vi pretas.
game.win                = Bonege, ke mi trafis ĝin ĝuste!
game.giveUp             = Mi rezignas. Kiun beston vi havas en la kapo?
game.isCorrect          = Ĉu la aserto ĝustas por la {0}?
game.learned            = Mi lernis la jenajn faktojn pri bestoj:
game.distinguish        = Mi povas distingi ĉi tiujn bestojn per la demando:

game.thanks=\
    Tio estis amuza! \f\
    Estis agrable ludi kun vi! \f\
    Dankon pro ludado! \f\
    Dankon! Mi tro amuziĝis! 

game.again=\
    Ĉu vi volas provi denove?\f\
    Ĉu vi ŝatas ludi denove?\f\
    Ĉu vi volas ripeti?\f\
    Ĉu vi volas ludi denove?\f\
    Ankoraŭ unu ludo?\f\
    Ĉu vi volas ludi denove?

# Application Menu

# Menu properties
menu.property.title     = Kion vi volas fari:
menu.property.exit      = Eliri
menu.property.error     = Bonvolu enigi numeron de 0 ĝis {0}

# Menu items
menu.entry.play         = Ludi la divenludon
menu.entry.list         = Listo de ĉiuj bestoj
menu.entry.search       = Serĉi beston
menu.entry.delete       = Forigi beston
menu.entry.statistics   = Kalkuli statistikojn
menu.entry.print        = Printi la Sciarbon

# Tree Services

# List of all animals
tree.list.animals       = Jen la bestoj, kiujn mi konas:

# This property is format for printf method
tree.list.printf     =\ - %1$s (%2$d)%n

# Search an animal

tree.search.facts       = Faktoj pri la {0}:
tree.search.noFacts    = Neniuj faktoj pri la {0}.

# Delete an animal

tree.delete.root        = Ne eblas forigi la solan beston de la radiko.
tree.delete.successful  = La {0} estis forigita de la sciobazo.
tree.delete.fail        = La {0} ne troviĝis en la sciobazo.

# The Knowledge Tree Statistics
tree.stats.title       =La statistiko de la Scio-Arbo
tree.stats.root        =- radika nodo                  {0}
tree.stats.nodes       =- totala nombro de nodoj       {0,number,integer}
tree.stats.animals     =- totala nombro de bestoj      {0,number,integer}
tree.stats.statements  =- totala nombro de deklaroj    {0,number,integer}
tree.stats.height      =- alteco de la arbo            {0,number,integer}
tree.stats.minimum     =- minimuma profundo            {0,number,integer}
tree.stats.average     =- averaĝa profundo             {0,number,##0.0}


# Print the Knowledge Tree
tree.print.vertical     = │
tree.print.branch       = ├
tree.print.corner       = └

# This property is format for printf method
tree.print.printf       = %1$s%2$s %3$s%n
